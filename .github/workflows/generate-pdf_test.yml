name: Generate PDF Test

on:
  push:
    branches: [dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: read

jobs:
  build_en:
    name: Compile resume pdf in English
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/${{ github.repository_owner }}/resume-latex:latest
          options: -v ${{ github.workspace }}:/data
          run: |
            cd data
            pdflatex gabriel_gomez_resume_en.tex
      - name: Upload PDF (English)
        uses: actions/upload-artifact@v4
        with:
          name: resume-en
          path: gabriel_gomez_resume_en.pdf
  build_es:
    name: Compile resume pdf in Spanish
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/${{ github.repository_owner }}/resume-latex:latest
          options: -v ${{ github.workspace }}:/data
          run: |
            cd data
            pdflatex gabriel_gomez_resume_es.tex
      - name: Upload PDF (Spanish)
        uses: actions/upload-artifact@v4
        with:
          name: resume-es
          path: gabriel_gomez_resume_es.pdf

  release:
    name: Check if PDFs exist before release
    needs: [build_en, build_es]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download PDFs
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: ls -R artifacts

      - name: Check if PDFs exist before release
        run: |
          FILES=$(ls artifacts/*/*.pdf 2>/dev/null | wc -l)
          if [ "$FILES" -eq "0" ]; then
            echo "No PDFs found, skipping release."
            exit 1
          fi
